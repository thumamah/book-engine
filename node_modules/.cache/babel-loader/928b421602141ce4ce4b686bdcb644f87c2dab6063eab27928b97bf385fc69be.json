{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thuma\\\\Desktop\\\\Final_Project\\\\book-engine\\\\src\\\\components\\\\Head.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport img1 from './head-img1.jpg';\nimport './Head.css';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { DateRange } from 'react-date-range';\nimport { useState } from \"react\";\nimport { format, addDays } from 'date-fns';\nimport { faBed, faCalendarDays, faPerson } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  // used react useState hook to remeber is the date model is open or not\n  // by default it'll be closed.\n  const [openDate, setOpenDate] = useState(false);\n  // storing users selected date using react date range library\n  const [date, setDate] = useState([{\n    // start date is the current date\n    startDate: new Date(),\n    // end date is 1 day after start\n    endDate: addDays(new Date(), 1),\n    key: 'selection'\n  }]);\n\n  // using react useState hook to store users selected room, adults and children\n  // by default room and adult is defined as 1, children has been as 0.\n  const [numRooms, setNumRooms] = useState(1);\n  const [numAdults, setNumAdults] = useState(1);\n  const [numChildren, setNumChildren] = useState(0);\n\n  // event handlers to update the state whenever the user changes value\n  const handleNumRoomsChange = event => {\n    setNumRooms(parseInt(event.target.value));\n  };\n  const handleNumAdultsChange = event => {\n    setNumAdults(parseInt(event.target.value));\n  };\n  const handleNumChildrenChange = event => {\n    setNumChildren(parseInt(event.target.value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"head\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"rounded\",\n        src: img1,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookItems\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faBed,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Destination\",\n            className: \"headerSearchInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookItems\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCalendarDays,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setOpenDate(!openDate),\n            children: `${format(date[0].startDate, \"dd/MM/yyyy\")} to ${format(date[0].endDate, \"dd/MM/yyyy\")}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), openDate && /*#__PURE__*/_jsxDEV(DateRange, {\n            onChange: item => setDate([item.selection]),\n            showSelectionPreview: true,\n            moveRangeOnFirstSelection: false,\n            months: 1,\n            ranges: date,\n            className: \"dates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookItems\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPerson,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Rooms:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: numRooms,\n              onChange: handleNumRoomsChange,\n              children: [...Array(10)].map((_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: i + 1,\n                children: i + 1\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), \"Adults:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: numAdults,\n              onChange: handleNumAdultsChange,\n              children: [...Array(10)].map((_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: i + 1,\n                children: i + 1\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), \"Children:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: numChildren,\n              onChange: handleNumChildrenChange,\n              children: [...Array(6)].map((_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: i,\n                children: i\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookItems\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"bg-orange-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded ml-1\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"94cajiRblJgx/irhXNMNZ3lX38o=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","img1","DateRange","useState","format","addDays","faBed","faCalendarDays","faPerson","FontAwesomeIcon","Navbar","openDate","setOpenDate","date","setDate","startDate","Date","endDate","key","numRooms","setNumRooms","numAdults","setNumAdults","numChildren","setNumChildren","handleNumRoomsChange","event","parseInt","target","value","handleNumAdultsChange","handleNumChildrenChange","item","selection","Array","map","_","i"],"sources":["C:/Users/Thuma/Desktop/Final_Project/book-engine/src/components/Head.jsx"],"sourcesContent":["import React from 'react';\r\nimport img1 from './head-img1.jpg';\r\nimport './Head.css';\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport { DateRange } from 'react-date-range';\r\nimport { useState } from \"react\";\r\nimport { format, addDays } from 'date-fns';\r\nimport {\r\n    faBed,\r\n    faCalendarDays,\r\n    faPerson\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Navbar = () => {\r\n    // used react useState hook to remeber is the date model is open or not\r\n    // by default it'll be closed.\r\n    const [openDate, setOpenDate] = useState(false)\r\n    // storing users selected date using react date range library\r\n    const [date, setDate] = useState([\r\n        {\r\n            // start date is the current date\r\n            startDate: new Date(),\r\n            // end date is 1 day after start\r\n            endDate: addDays(new Date(), 1),\r\n            key: 'selection'\r\n        }\r\n    ]);\r\n\r\n    // using react useState hook to store users selected room, adults and children\r\n    // by default room and adult is defined as 1, children has been as 0.\r\n    const [numRooms, setNumRooms] = useState(1);\r\n    const [numAdults, setNumAdults] = useState(1);\r\n    const [numChildren, setNumChildren] = useState(0);\r\n\r\n    // event handlers to update the state whenever the user changes value\r\n    const handleNumRoomsChange = (event) => {\r\n        setNumRooms(parseInt(event.target.value));\r\n    };\r\n\r\n    const handleNumAdultsChange = (event) => {\r\n        setNumAdults(parseInt(event.target.value));\r\n    };\r\n\r\n    const handleNumChildrenChange = (event) => {\r\n        setNumChildren(parseInt(event.target.value));\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"head\">\r\n            <div\r\n                className=\"\">\r\n                <img\r\n                    class=\"rounded\"\r\n                    src={img1}\r\n                    alt=\"\" />\r\n                <div className='search'>\r\n                    <div className=\"bookItems\">\r\n                        {/* used font awesome icons */}\r\n                        <FontAwesomeIcon icon={faBed} className='icon' />\r\n                        {/* input for field for searching hotels */}\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Destination\"\r\n                            className=\"headerSearchInput\"\r\n                        />\r\n                    </div>\r\n                    {/* date selection */}\r\n                    <div className=\"bookItems\">\r\n                        <FontAwesomeIcon icon={faCalendarDays} className='icon' />\r\n                        {/* displaying the selected dates by the user \r\n                        enabling the user to open date model if its closed\r\n                        also formatting the date in the day, month, year format.\r\n                        */}\r\n                        <span onClick={() => setOpenDate(!openDate)}>{`${format(date[0].startDate, \"dd/MM/yyyy\")} to ${format(date[0].endDate, \"dd/MM/yyyy\")}`}</span>\r\n                         {/* adding a condition to ensure date model is closed on page reload and first visit */}\r\n                        {openDate && <DateRange\r\n                            onChange={item => setDate([item.selection])}\r\n                            showSelectionPreview={true}\r\n                            moveRangeOnFirstSelection={false}\r\n                            months={1}\r\n                            ranges={date}\r\n                            className='dates'\r\n                        />}\r\n                    </div>\r\n\r\n                    {/* following are the options for selecting rooms and guests*/}\r\n                    <div className=\"bookItems\">\r\n                        <FontAwesomeIcon icon={faPerson} className='icon' />\r\n                        {/* used select element so user can choose value form 1-10\r\n                            using value to determine current selected value and onChange\r\n                            which calls the handler when user changes selected value.\r\n                        */}\r\n                        <span>Rooms:<select value={numRooms} onChange={handleNumRoomsChange}>\r\n                            {/* used the array spread operator to create array to hold values\r\n                                then used map function to create array of options\r\n                            */}\r\n                            {[...Array(10)].map((_, i) => (\r\n                                <option key={i} value={i + 1}>\r\n                                    {i + 1}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                            Adults:\r\n                            <select value={numAdults} onChange={handleNumAdultsChange}>\r\n                                {[...Array(10)].map((_, i) => (\r\n                                    <option key={i} value={i + 1}>\r\n                                        {i + 1}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            Children:\r\n                            <select value={numChildren} onChange={handleNumChildrenChange}>\r\n                                {[...Array(6)].map((_, i) => (\r\n                                    <option key={i} value={i}>\r\n                                        {i}\r\n                                    </option>\r\n                                ))}\r\n                            </select></span>\r\n                    </div>\r\n\r\n                    {/* button to search for results */}\r\n                    <div className=\"bookItems\">\r\n                        <button class=\"bg-orange-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded ml-1\">\r\n                            Search\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}