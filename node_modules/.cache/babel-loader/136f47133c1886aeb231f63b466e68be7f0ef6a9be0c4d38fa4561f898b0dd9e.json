{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thuma\\\\Desktop\\\\fp\\\\book-engine\\\\src\\\\components\\\\HotelSearch.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './HotelSearch.css';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { DateRange } from 'react-date-range';\nimport { useState } from \"react\";\nimport { format, addDays } from 'date-fns';\nimport { faBed, faCalendarDays, faPerson } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport HotelResults from './HotelResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HotelSearch = () => {\n  _s();\n  // used react useState hook to remeber is the date model is open or not\n  // by default it'll be closed.\n  const [openDate, setOpenDate] = useState(false);\n  // storing users selected date using react date range library\n  // const [date, setDate] = useState([\n  //     {\n  //         // start date is the current date\n  //         startDate: new Date(),\n  //         // end date is 1 day after start\n  //         endDate: addDays(new Date(), 1),\n  //         key: 'selection'\n  //     }\n  // ]);\n\n  const loc = useLocation();\n  // using react useState hook to store users selected room, adults and children\n  // by default room and adult is defined as 1, children has been as 0.\n  const [numRooms, setNumRooms] = useState(loc.state.numRooms);\n  const [numAdults, setNumAdults] = useState(loc.state.numAdults);\n  const [numChildren, setNumChildren] = useState(loc.state.numChildren);\n  const [date, setDate] = useState(loc.state.date);\n  const [Destination, setDestination] = useState(loc.state.Destination);\n\n  // event handlers to update the state whenever the user changes value\n  const handleNumRoomsChange = event => {\n    setNumRooms(parseInt(event.target.value));\n  };\n  const handleNumAdultsChange = event => {\n    setNumAdults(parseInt(event.target.value));\n  };\n  const handleNumChildrenChange = event => {\n    setNumChildren(parseInt(event.target.value));\n  };\n  const navi = useNavigate();\n  const searchFunc = () => {\n    const searchParams = {\n      destination: Destination,\n      startDate: date[0].startDate.toISOString(),\n      endDate: date[0].endDate.toISOString(),\n      numRooms,\n      numAdults,\n      numChildren\n    };\n    navi(\"../Hotels\", {\n      state: searchParams\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"head\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Hsearch\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookItems\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faBed,\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: Destination,\n          className: \"headerSearchInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookItems\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCalendarDays,\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setOpenDate(!openDate),\n          children: `${format(date[0].startDate, \"dd/MM/yyyy\")} to ${format(date[0].endDate, \"dd/MM/yyyy\")}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), openDate && /*#__PURE__*/_jsxDEV(DateRange, {\n          onChange: item => setDate([item.selection]),\n          showSelectionPreview: true,\n          moveRangeOnFirstSelection: false,\n          minDate: new Date(),\n          months: 1,\n          ranges: date,\n          className: \"dates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookItems\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPerson,\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Rooms:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: numRooms,\n            onChange: handleNumRoomsChange,\n            children: [...Array(10)].map((_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i + 1,\n              children: i + 1\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 37\n          }, this), \"Adults:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: numAdults,\n            onChange: handleNumAdultsChange,\n            children: [...Array(10)].map((_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i + 1,\n              children: i + 1\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), \"Children:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: numChildren,\n            onChange: handleNumChildrenChange,\n            children: [...Array(6)].map((_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i,\n              children: i\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookItems\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: searchFunc,\n          class: \"bg-orange-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded ml-1\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(HotelSearch, \"Gug/9P9eXm8Z7jGb4FGdDv9wNOI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = HotelSearch;\nexport default HotelSearch;\nvar _c;\n$RefreshReg$(_c, \"HotelSearch\");","map":{"version":3,"names":["React","DateRange","useState","format","addDays","faBed","faCalendarDays","faPerson","FontAwesomeIcon","useLocation","useNavigate","HotelResults","HotelSearch","openDate","setOpenDate","loc","numRooms","setNumRooms","state","numAdults","setNumAdults","numChildren","setNumChildren","date","setDate","Destination","setDestination","handleNumRoomsChange","event","parseInt","target","value","handleNumAdultsChange","handleNumChildrenChange","navi","searchFunc","searchParams","destination","startDate","toISOString","endDate","item","selection","Date","Array","map","_","i"],"sources":["C:/Users/Thuma/Desktop/fp/book-engine/src/components/HotelSearch.jsx"],"sourcesContent":["import React from 'react';\r\nimport './HotelSearch.css';\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport { DateRange } from 'react-date-range';\r\nimport { useState } from \"react\";\r\nimport { format, addDays } from 'date-fns';\r\nimport {\r\n    faBed,\r\n    faCalendarDays,\r\n    faPerson\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport HotelResults from './HotelResults';\r\n\r\nconst HotelSearch = () => {\r\n    \r\n    // used react useState hook to remeber is the date model is open or not\r\n    // by default it'll be closed.\r\n    const [openDate, setOpenDate] = useState(false)\r\n    // storing users selected date using react date range library\r\n    // const [date, setDate] = useState([\r\n    //     {\r\n    //         // start date is the current date\r\n    //         startDate: new Date(),\r\n    //         // end date is 1 day after start\r\n    //         endDate: addDays(new Date(), 1),\r\n    //         key: 'selection'\r\n    //     }\r\n    // ]);\r\n\r\n    const loc = useLocation();\r\n    // using react useState hook to store users selected room, adults and children\r\n    // by default room and adult is defined as 1, children has been as 0.\r\n    const [numRooms, setNumRooms] = useState(loc.state.numRooms);\r\n    const [numAdults, setNumAdults] = useState(loc.state.numAdults);\r\n    const [numChildren, setNumChildren] = useState(loc.state.numChildren);\r\n\r\n    const [date, setDate] = useState(loc.state.date);\r\n    const [Destination, setDestination] = useState(loc.state.Destination);\r\n    \r\n\r\n    // event handlers to update the state whenever the user changes value\r\n    const handleNumRoomsChange = (event) => {\r\n        setNumRooms(parseInt(event.target.value));\r\n    };\r\n\r\n    const handleNumAdultsChange = (event) => {\r\n        setNumAdults(parseInt(event.target.value));\r\n    };\r\n\r\n    const handleNumChildrenChange = (event) => {\r\n        setNumChildren(parseInt(event.target.value));\r\n    };\r\n\r\n    const navi = useNavigate()\r\n    const searchFunc = ()=>{\r\n        const searchParams = {\r\n            destination: Destination,\r\n            startDate: date[0].startDate.toISOString(),\r\n            endDate: date[0].endDate.toISOString(),\r\n            numRooms,\r\n            numAdults,\r\n            numChildren,\r\n          };\r\n          \r\n          navi(\"../Hotels\", { state: searchParams });\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"head\">\r\n            \r\n                \r\n                <div className='Hsearch'>\r\n                    <div className=\"bookItems\">\r\n                        {/* used font awesome icons */}\r\n                        <FontAwesomeIcon icon={faBed} className='icon' />\r\n                        {/* input for field for searching hotels */}\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder={Destination}\r\n                            className=\"headerSearchInput\"\r\n                        />\r\n                    </div>\r\n                    {/* date selection */}\r\n                    <div className=\"bookItems\">\r\n                        <FontAwesomeIcon icon={faCalendarDays} className='icon' />\r\n                        {/* displaying the selected dates by the user \r\n                        enabling the user to open date model if its closed\r\n                        also formatting the date in the day, month, year format.\r\n                        */}\r\n                        <span onClick={() => setOpenDate(!openDate)}>{`${format(date[0].startDate, \"dd/MM/yyyy\")} to ${format(date[0].endDate, \"dd/MM/yyyy\")}`}</span>\r\n                        {/* adding a condition to ensure date model is closed on page reload and first visit */}\r\n                        {openDate && <DateRange\r\n                            onChange={item => setDate([item.selection])}\r\n                            showSelectionPreview={true}\r\n                            moveRangeOnFirstSelection={false}\r\n                            minDate={new Date()}\r\n                            months={1}\r\n                            ranges={date}\r\n                            className='dates'\r\n                        />}\r\n                    </div>\r\n\r\n                    {/* following are the options for selecting rooms and guests*/}\r\n                    <div className=\"bookItems\">\r\n                        <FontAwesomeIcon icon={faPerson} className='icon' />\r\n                        {/* used select element so user can choose value form 1-10\r\n                            using value to determine current selected value and onChange\r\n                            which calls the handler when user changes selected value.\r\n                        */}\r\n                        <span>Rooms:<select value={numRooms} onChange={handleNumRoomsChange}>\r\n                            {/* used the array spread operator to create array to hold values\r\n                                then used map function to create array of options\r\n                            */}\r\n                            {[...Array(10)].map((_, i) => (\r\n                                <option key={i} value={i + 1}>\r\n                                    {i + 1}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                            Adults:\r\n                            <select value={numAdults} onChange={handleNumAdultsChange}>\r\n                                {[...Array(10)].map((_, i) => (\r\n                                    <option key={i} value={i + 1}>\r\n                                        {i + 1}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            Children:\r\n                            <select value={numChildren} onChange={handleNumChildrenChange}>\r\n                                {[...Array(6)].map((_, i) => (\r\n                                    <option key={i} value={i}>\r\n                                        {i}\r\n                                    </option>\r\n                                ))}\r\n                            </select></span>\r\n                    </div>\r\n\r\n                    {/* button to search for results */}\r\n                    <div className=\"bookItems\">\r\n                        <button onClick={searchFunc} class=\"bg-orange-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded ml-1\">\r\n                            Search\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default HotelSearch\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}